name: Continuous Integration

on: [pull_request]

jobs:
  quick_test:
    name: Misc check
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Misc
        run: check/misc
  format:
    name: Format check
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install flynt
        run: cat dev_tools/conf/pip-list-dev-tools.txt | grep flynt | xargs pip install
      - name: Install black
        run: cat dev_tools/conf/pip-list-dev-tools.txt | grep black | xargs pip install
      - name: Format
        run: check/format-incremental
  mypy:
    name: Type check
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install mypy
        run: cat dev_tools/conf/pip-list-dev-tools.txt | grep mypy | xargs pip install
      - name: Type check
        run: check/mypy
  changed_files:
    name: Changed files test
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install changed files test dependencies
        run: dev_tools/conf/pip-install-minimal-for-pytest-changed-files.sh
      - name: Changed files test
        run: check/pytest-changed-files
  lint:
    name: Lint check
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install pylint
        run: cat dev_tools/conf/pip-list-dev-tools.txt | grep "pylint" | grep -v "#" | xargs pip install
      - name: Display version
        run: check/pylint --version
      - name: Lint
        run: check/pylint -v
  doc_test:
    name: Doc test
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r requirements.txt -r cirq/contrib/contrib-requirements.txt -r dev_tools/conf/pip-list-dev-tools.txt
      - name: RST check
        run: find . -type f -name "*.rst" | xargs rstcheck --report warning --ignore-directives autoclass,automodule
      - name: Doc check
        run: check/doctest -q
  nbformat:
    name: Notebook formatting
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Doc check
        run: check/nbformat
  pytest:
    name: Pytest Ubuntu
    strategy:
      matrix:
        # TODO(#3800): remove 3.6 when Colab switches to 3.7
        python-version: ['3.6', '3.7', '3.8']
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Force old pip (3.6 only)
        if: matrix.python-version == '3.6'
        run: pip install pip==20.2
      - name: Install requirements
        run: |
          pip install -r requirements.txt
          pip install -r dev_tools/conf/pip-list-dev-tools.txt
          # TODO: move to requirements.txt after #3704
          pip install codeowners==0.1.2 # linux only package
      - name: Pytest check
        run: check/pytest --ignore=cirq/contrib --actually-quiet
  build_docs:
    name: Build docs
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r rtd_docs/requirements.txt
      - name: Build docs
        run: dev_tools/docs/build-rtd-docs.sh
  build_protos:
    name: Build protos
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install requirements
        run: |
          python -m pip install -r dev_tools/conf/pip-list-dev-tools.txt
          wget https://github.com/bazelbuild/bazel/releases/download/0.26.0/bazel_0.26.0-linux-x86_64.deb
          sudo dpkg -i bazel_0.26.0-linux-x86_64.deb
      - name: Build protos
        run: check/build-changed-protos
  coverage:
    name: Coverage check
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r requirements.txt
          pip install -r cirq/contrib/contrib-requirements.txt
          pip install -r dev_tools/conf/pip-list-dev-tools.txt
      - name: Coverage check
        run: check/pytest-and-incremental-coverage --actually-quiet
  windows:
    name: Pytest Windows
    strategy:
      matrix:
        python-version: ['3.7', '3.8']
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r requirements.txt
          pip install -r dev_tools/conf/pip-list-dev-tools.txt
      - name: Pytest Windows
        run: check/pytest --ignore=cirq/contrib --actually-quiet
        shell: bash
  macos:
    name: Pytest MacOS
    strategy:
      matrix:
        python-version: ['3.7', '3.8']
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r requirements.txt
          pip install -r dev_tools/conf/pip-list-dev-tools.txt
      - name: Pytest check
        run: check/pytest --ignore=cirq/contrib
  notebooks-stable:
    name: Changed Notebooks Isolated Test against Cirq stable
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r dev_tools/notebooks/requirements-isolated-notebook-tests.txt
      - name: Notebook tests
        run: check/pytest -n auto -m slow dev_tools/notebooks/isolated_notebook_test.py
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: notebook-outputs
          path: out
  notebooks-branch:
    name: Notebook Tests against PR
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r requirements.txt -r cirq/contrib/contrib-requirements.txt -r dev_tools/notebooks/requirements-notebook-tests.txt
      - name: Notebook tests
        run: check/pytest -n auto -m slow dev_tools/notebooks/notebook_test.py
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: notebook-outputs
          path: out
